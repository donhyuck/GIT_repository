package a_Array_X;

//배열 사용x버전
public class Main {
	public static void main(String[] args) {
		사람인력관리소 a사람인력관리소 = new 사람인력관리소();

		// 나이가 33살인 1번째 사람(홍길순)이 추가되었습니다.
		// 나이가 20살인 2번째 사람(홍길동)이 추가되었습니다.
		// 나이가 30살인 3번째 사람(임꺽정)이 추가되었습니다.
		a사람인력관리소.add사람("홍길순", 33);
		a사람인력관리소.add사람("홍길동", 20);
		a사람인력관리소.add사람("임꺽정", 30);

		// 저는 1번, 홍길순, 33살 입니다.
		// 저는 2번, 홍길동, 20살 입니다.
		// 저는 3번, 임꺽정, 30살 입니다.
		사람 a사람1 = a사람인력관리소.get사람(1);
		a사람1.자기소개();

		사람 a사람2 = a사람인력관리소.get사람(2);
		a사람2.자기소개();

		사람 a사람3 = a사람인력관리소.get사람(3);
		a사람3.자기소개();
	}
}

// <변수의 스코프 / 변수의 생명주기> 검색
class 사람인력관리소 {

	// 입력받는 사람 정보를 담을 수 있다.
	// 이게 없다면 메모를 적고 버리는 셈이다.
	사람 a사람0; // 전역변수
	사람 a사람1;
	사람 a사람2;

	// 따로 기억하기 위해 메서드 외부에 번호를 남겨둔다.
	// get사람에서 구분하는 변수가 된다.
	int 마지막_사람_번호;

	사람인력관리소() {
		마지막_사람_번호 = 0;
	}

	void add사람(String 이름, int 나이) {

		int 번호 = 마지막_사람_번호 + 1; // 지역변수

		// 사람 객체 생성
		// a사람 = 사람에 대한 정보를 조립해서 적어놓는 명부
		사람 a사람 = new 사람();
		a사람.번호 = 번호;
		a사람.이름 = 이름;
		a사람.나이 = 나이;

		// gc(garbage collector)에 의해 데이터가 날아가도 사람리모콘을 백업해서 사람에 대한 정보를 번호로 구분한다.
		if (번호 == 1) {
			// 밖의 변수 = 입력받은 사람정보
			// 컨트롤 할 수 있는 리모콘을 넘겨받음
			a사람0 = a사람;
		}

		else if (번호 == 2) {
			a사람1 = a사람;
		}

		else if (번호 == 3) {
			a사람2 = a사람;
		}

		System.out.printf("나이가 %d살인 %d번째 사람(%s)이 추가되었습니다.\n", 나이, 번호, 이름);

		// 마지막 번호를 기억해서 자동으로 1씩 증가하도록 한다.
		마지막_사람_번호 = 번호;
	}

	// 리턴을 안하는 경우가 없어야함.
	// void가 아닌 경우 return 값이 있어야함
	// 번호를 제외하는 경우를 위해 else를 null로 한다.
	사람 get사람(int 번호) {
		// 적어둔 사람 정보를 불러옴
		if (번호 == 1) {
			return a사람0;
		}

		else if (번호 == 2) {
			return a사람1;
		}

		else if (번호 == 3) {
			return a사람2;
		}

		else {
			return null;
		}
	}
}

class 사람 {
	int 번호;
	String 이름;
	int 나이;

	void 자기소개() {
		System.out.printf("저는 %d번, %s, %d살 입니다.\n", 번호, 이름, 나이);
	}
}

//============================================
//*사람을 추가 하기 힘들다.
// 그래서 배열이 있으면 이를 해결할 수 있다.
//이 방식은 한정된 인원만 저장이 가능하다. 공간이 부족하다.
